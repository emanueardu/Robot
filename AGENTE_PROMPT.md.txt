# Prompt General ‚Äì Proyecto Robot Pi5 + ESP32

Este proyecto es un **robot aspirador inteligente** basado en:

- **Raspberry Pi 5** como unidad central de procesamiento.
- **ESP32** como sensor/actuador, encargado de:
  - Rel√©s (aspiradora, escobillas, bomba).
  - Sensores (DHT11, ultrasonido, MPU6050).
  - Comunicaci√≥n serie r√°pida con la Pi.

La Pi 5 maneja:
- **Expresiones faciales (OLEDs)** ‚Üí archivo `ojos_mqtt.py`  
  Maneja los ojos del robot y sus expresiones, controlado v√≠a MQTT y Firebase.  

- **Servos y c√°mara** ‚Üí archivo `servos_mqqt.py`  
  Control de dos servos que mueven la caja con la c√°mara y OLEDs (inclinaci√≥n -30¬∞ a +90¬∞).  

- **Lectura de ESP32** ‚Üí archivo `motores_mqqt.py`  
  Comunicaci√≥n por UART con el ESP32. Recibe datos crudos de sensores y cambios de estado (switches, IR, yaw).  

- **Firebase** ‚Üí archivo `firebase_mqtt.py`  
  Env√≠a datos le√≠dos (estado, sensores, bater√≠a, ubicaci√≥n, etc.) a Firebase Realtime Database.  

Codigo cargado eb esp32: "ESP32.ino"

---

## üéØ Objetivos del agente
- Mantener los archivos organizados y modulares.  
- Asegurar que **todo el c√≥digo funcione junto**, sin romper compatibilidad.  
- Optimizar redundancias (ej: funciones repetidas).  
- Documentar las funciones con comentarios claros.  
- Proponer mejoras de eficiencia o legibilidad.  
- Facilitar integraci√≥n futura con:
  - Navegaci√≥n (mapa de la casa en `Plano casa.pdf`).  
  - App m√≥vil (React Native + Firebase).  
  - Control remoto y √≥rdenes de limpieza.  

---

## üîß Forma de trabajo pedida
- No borrar l√≥gica existente, solo modularizar y optimizar.  
- Crear nuevos m√≥dulos si es necesario (`comm.py`, `utils.py`).  
- Mantener la comunicaci√≥n Pi ‚Üî ESP32 r√°pida (sin bloqueos).  
- Preparar hooks para agregar l√≥gica de navegaci√≥n y app m√≥vil.  
- Siempre que modifiques, dejar comentarios explicando el cambio.  
